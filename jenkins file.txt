pipeline {
    agent any

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('git-checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/SuMythC/DevOps-todo-kubernetes.git'
            }
        }

        stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv("sonar-scanner") {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=DevOps-CICD \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=DevOps-CICD '''
                }
            }
        }

        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: '<name of Dependency>'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Build') {
            steps {
                sh "docker build -t todoapp:latest -f docker/Dockerfile ."
                sh "docker tag todoapp:latest username/todoapp:latest"
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'username and password of docker') {
                        sh "docker push username/todoapp:latest"
                    }
                }
            }
        }

        stage('Trivy') {
            steps {
                sh "trivy image username/todoapp:latest"
            }
        }

        stage('Deploy to Docker') {
            steps {
                sh "docker run -d --name to-do-app -p 8000:8000 username/todoapp:latest"
            }
        }
    }
}